// <auto-generated />
using HealthDesctop.source.LocalDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HealthDesctop.Migrations
{
    [DbContext(typeof(LocalDbContext))]
    [Migration("20250607121201_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HealthDesctop.source.LocalDB.Tables.tbl_Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Fk_Color")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Fk_Color");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("HealthDesctop.source.LocalDB.Tables.tbl_CategoryColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("Blue")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Green")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Red")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("CategoryColors");
                });

            modelBuilder.Entity("HealthDesctop.source.LocalDB.Tables.tbl_ListOfProducts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Fk_CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Fk_ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("tbl_CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("tbl_ProductsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Fk_CategoryId");

                    b.HasIndex("Fk_ProductId");

                    b.HasIndex("tbl_CategoryId");

                    b.HasIndex("tbl_ProductsId");

                    b.ToTable("ListOfProducts");
                });

            modelBuilder.Entity("HealthDesctop.source.LocalDB.Tables.tbl_Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<int>("Carbohydrates")
                        .HasColumnType("int");

                    b.Property<int>("Fats")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Proteins")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("HealthDesctop.source.LocalDB.Tables.tbl_Category", b =>
                {
                    b.HasOne("HealthDesctop.source.LocalDB.Tables.tbl_CategoryColor", "Color")
                        .WithMany()
                        .HasForeignKey("Fk_Color")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");
                });

            modelBuilder.Entity("HealthDesctop.source.LocalDB.Tables.tbl_ListOfProducts", b =>
                {
                    b.HasOne("HealthDesctop.source.LocalDB.Tables.tbl_Category", "Category")
                        .WithMany()
                        .HasForeignKey("Fk_CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HealthDesctop.source.LocalDB.Tables.tbl_Products", "Product")
                        .WithMany()
                        .HasForeignKey("Fk_ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HealthDesctop.source.LocalDB.Tables.tbl_Category", null)
                        .WithMany("ListOfProducts")
                        .HasForeignKey("tbl_CategoryId");

                    b.HasOne("HealthDesctop.source.LocalDB.Tables.tbl_Products", null)
                        .WithMany("ListOfProducts")
                        .HasForeignKey("tbl_ProductsId");

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("HealthDesctop.source.LocalDB.Tables.tbl_Category", b =>
                {
                    b.Navigation("ListOfProducts");
                });

            modelBuilder.Entity("HealthDesctop.source.LocalDB.Tables.tbl_Products", b =>
                {
                    b.Navigation("ListOfProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
